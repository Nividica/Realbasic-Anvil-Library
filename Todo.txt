Realbasic Anvil Library
    RegionReader:
        Load a region file, Done
        Read region header, Done
        Read chunk information, Done
        Inflate chunk data, Done (Thanks to Charles and zLib)
        
    NBT
        Parse inflated chunk data, Done
        Convert NBT to Parent:Child nodes, Done
        Provide pathing, Done
        Add transparent support for 4bit data(nibble), Done
        Add human readable export, Done
        
    AnvilRegion
        Provide an OO way to access chunks, Done
        Add ablility to open a file, and convert to AnvilRegion, Done
        Raise custom exception when a chunk can not be located, Done
        
    AnvilChunk
        Convert NBT to OO accessable data, In progress( Entities, and TileEntities are incomplete)
        Provide easy way to access a block, Done
        Raise custom exception when a block can not be located, Done
        
    AnvilSection
        Store section data in sync arrays, Done
        Provide easy way to access a block, Done
        Raise custom exception when a block can not be located, Done
        
    AnvilBlock
        Store block data, Done
        Provide easy way to access the blocks position in the world, In progress( Could lead to NilObject errors)
        Provide easy way to access the blocks height in the world, In progress( Could lead to NilObject errors)
        
    AnvilUnimplemented
        Anything with this class means I have not converted to OO accessability
        
    AnvilCoords
        Move all constants relating to location here, Done
        Provide methods of converting from one coordinate system to another, In Progress
        
    BlockIDs
        Store all known block ID values, Done
        Provide method for converting block ID to a string name, Done
        Overload methods to accept both integer ID's OR AnvilBlock's, Done
        
    DataIDs
        Store all known data values, In Progress (No where near done)
        
    BlockNotFoundException
        Custom exception for cases when a block can not be found, Done
        
    ChunkNotFoundException
        Custom exception for cases when a chunk can not be found, Done
        
    Position
        Create an easy way to store X,Y,Z triplets, Done
        
    Nibble
        Create a new data type to store 4 bits of numeric data, Done
        Provide operator overloading for converting from other numeric types, Done
        Provide operator overloading for converting to other numeric types, Done
        
    BlockMapper
        Provide method for loading a texture pack, Done
        Provide methods for coloring blocks from extended texture packs, In Progress (Grass only right now)
        Provide methods for converting a block or blockID to a texture, Done
        Provide methods for converting blocks with data sensitve information to texture, In Progress(Wool only)
        Provide a method for getting the topography of a chunk, Done
        Provide a method for getting the topography of a Region, Done
        Allow custom inclusion list for topography, Done
        Provide method for converting a topography to a gray-scale heightmap, Done
        Provide method for converting a region to a gray-scale heightmap, Done
        Add some realtime feedback for the conversion process. Done, but weird.
        
    RegionheightmapProgress
        Create an event-centric way of providing feedback about the region heightmaping process. Done, but weird.
        
    TopographyMap
        Store an XZ (BlockCoords) array of the topmost blocks( as provided from BlockMapper), Done
        Provide an easy way of getting or setting the blocks, Done
        
    RegionTopography
        Store an XZ (ChunkCoords) array of all the TopographyMaps in a region, Done
        Provide an easy way of getting and setting the chunks, Done
        
    UnityExportTools
        Convert a region to a heightmap, splatmap script, and texture files. Done~ish.
        Provide methods for creating the unity script. Done, needs some serious optimization in the output script.
        Provide a method for extracting the needed textures, In progress( saves all in the include list, not just the ones used)
        Provide a method for exporting minecraft structures to 3d objects, Planned